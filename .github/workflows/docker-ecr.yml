name: Build and Push Oracle Image to ECR

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-east-2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate revision tag
        run: |
          DATE_TAG=$(date +'%Y%m%d-%H%M')
          SHORT_SHA=${GITHUB_SHA::7}
          REVISION_TAG="SUMMONORACLE-${DATE_TAG}-main-${SHORT_SHA}"
          echo "REVISION_TAG=$REVISION_TAG" >> $GITHUB_ENV
          echo "Revision tag is: '$REVISION_TAG'"

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            -t ${{ secrets.ECR_REPO }}:$REVISION_TAG \
            -t ${{ secrets.ECR_REPO }}:latest \
            -f dockerfile .
          docker push ${{ secrets.ECR_REPO }}:latest
          docker push ${{ secrets.ECR_REPO }}:$REVISION_TAG

      - name: Register new ECS task definition revision
        id: register-task
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEF_FAMILY }} > task-def.json

          jq --arg image "${{ secrets.ECR_REPO }}:$REVISION_TAG" '.taskDefinition |
            { family, containerDefinitions, executionRoleArn, taskRoleArn, networkMode, requiresCompatibilities, cpu, memory } |
            .containerDefinitions[0].image = $image' task-def.json > new-task-def.json

          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Update ECS service with new task definition
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment --task-definition ${{ secrets.TASK_DEF_FAMILY }}
